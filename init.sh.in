#!/bin/sh
#
# Script created from Yxa init.sh.in
#

PROGRAMNAME="@PROGRAMNAME@"
CONFIGDIR="@CONFIGDIR@"
SSLCERTDIR="@SSLCERTDIR@"
MNESIABASE="@MNESIADIR@"
MNESIADIR="$MNESIABASE/$PROGRAMNAME"
beamdir="@beamdir@"
erl="@erl@"
DETACH="-detached"

MYNAME=`basename $0`

if [ "x$MYNAME" = "xbootstrap.sh" ]; then
    # Adjust Mnesia dir path when bootstrapping so that it is the same as when
    # we run the real system (incomingproxy is database server node)
    MNESIADIR="$MNESIABASE/incomingproxy"
fi

# Calculate Erlang arguments
CONFIGPATH="$CONFIGDIR/$PROGRAMNAME"

if [ "x$SSLCERTDIR" = "x" ]; then
    SSLCERTFILE="$CONFIGDIR/yxa/cert.comb"
else
    SSLCERTFILE="$SSLCERTDIR/cert.comb"
fi

if [ -f ${SSLCERTFILE} ] ; then
    ssloptions="-proto_dist inet_ssl \
	-ssl_dist_opt client_certfile $SSLCERTFILE \
	-ssl_dist_opt server_certfile $SSLCERTFILE -ssl_dist_opt verify 2"
else
    echo "WARNING: starting without SSL - " \
	"missing certificate file ${SSLCERTFILE}"
fi

if [ "x$MNESIADIR" = "x" ]; then
    MNESIAPARAMETERS=""
else
    if [ ! -d "$MNESIADIR" ]; then
	echo "$0: Mnesia directory '$MNESIADIR' does not exist!"
	exit 1
    fi
    MNESIAPARAMETERS="-mnesia dir '"$MNESIADIR"'"
fi

for EXTRA_DIR in "${PWD}/event_handler" "${PWD}/cpl"; do
    # Add event_handler to search path if such a directory exists
    # (meaning we are probably in the build directory)
    if [ -d "$EXTRA_DIR" ]; then
	EXTRA_ERL_ARGUMENTS="${EXTRA_ERL_ARGUMENTS} -pz $EXTRA_DIR"
    fi
done
    
if [ "x$1" = "x-d" ]; then
    DETACH=""
fi

if [ "x$MYNAME" = "xbootstrap.sh" ]; then
    if [ ! -d "$MNESIADIR" ]; then
	echo "Creating Mnesia directory '$MNESIADIR'"
	mkdir "$MNESIADIR"
    fi

    if [ ! -d "$MNESIADIR" ]; then
	echo "Failed creating Mnesia directory!"
	echo ""
	exit 1
    fi

    if [ "x$ADMINPW" = "x" ]; then
	echo "You are not following the instructions in README!"
	echo ""
	echo "You need to set the environment variable ADMINPW"
	echo "before executing $0. Like this :"
	echo ""
	echo "  $ ADMINPW=foo $0"
	echo ""
	exit 1
    fi

    # yes, the name should be incomingproxy when bootstrapping
    ${erl} -pz ${beamdir} \
	$EXTRA_ERL_ARGUMENTS \
	-name incomingproxy \
	-noshell $MNESIAPARAMETERS \
	-run bootstrap start "$ADMINPW" \
	-run init stop
else
    if [ ! -r "${CONFIGPATH}.config" ]; then
	echo "$0: Configuration file ${CONFIGPATH}.config not found or not readable"
	exit 1
    fi

    ${erl} -boot $PROGRAMNAME -pz ${beamdir} \
	$EXTRA_ERL_ARGUMENTS \
	-name $PROGRAMNAME -config $CONFIGPATH \
	$ssloptions \
	$MNESIAPARAMETERS $DETACH
fi
