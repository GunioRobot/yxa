============
Applications
============

Applications included are:

adminwww:

Web server that provides an https administration interface

incomingproxy:

Handles registrations and proxies requests. Implements partial ENUM
and LDAP searches.

pstnproxy:

Designed as an authentication frontend to an insecure PSTN gateway.
Can handle rewriting of From: addresses in either direction.

============
Installation
============

Create a build directory somewhere and copy the "Makefile.template"
from the source directory here and name it "Makefile". Edit the srcdir
variable and change the STARTSCRIPT variable to whatever
application(s) you want to build there.

Type "make" in your build directory.

===
SSL
===

If you want to use SSL (normally enabled), either put your combined
private and public X.509 key in ssl/cert.comb or edit the ssl.config
in the source directory and do "make sslkey" to get a self-signed
certificate. The certificate password must be "foobar" if you use
"make sslkey".

=====================
Distributed operation
=====================

If you want to setup a distributed erlang system, you must have the
same ~/.erlang.cookie file on all nodes.

=============
Configuration
=============

The configuration file is named <application>.config and contains
these variables:

common:
-------
logger_logbase			(default: application name) Create log files
				based on this. If you specify
				/var/log/incomingproxy as logger_logbase for
				your incomingproxy, it will log to the files
				/var/log/incomingproxy.debug (everything)
				/var/log/incomingproxy.log   (informational)
				/var/log/incomingproxy.error (errors)
sipauth_realm			(default: "") HTTP Auth realm
sipauth_password		(default: "") HTTP Auth internal cookie
sipauth_unauth_classlist	(default: []) Classes that anyone can call
databaseservers			(required if using remote databases)
				Erlang node specification of the database
				servers
ldap_server			(default: "" (ie. no LDAP)) LDAP server host name
ldap_username			(default: "") LDAP user name
ldap_password			(default: "") LDAP password
ldap_searchbase			(default: "") LDAP search base
listenport			(default: 5060) Port that the server
				should listen to

pstnproxy:
----------
pstngatewaynames		(required) List of IP addresses and/or
				hostnames of your PSTN gateway. The first
				entry in the list will be used in routing
				of SIP packets to the PSTN gateway.
				Incoming requests will be matched against
				this list when checking if they are from the
				PSTN gateway or not.
myhostnames			(required) List of IP addresses and/or
				hostnames of the host you run pstnproxy on.
				The first entry in the list will be used
				to symbolize this host in SIP packets
				(for example in Record-Route headers)
classdefs			(default: [{"", unknown}]) Regexps for
				classifying outgoing phone numbers
sipproxy			The name of the SIP proxy to route calls
				from the PSTN gateway to
rewrite_from			(default: []) Regexps for rewriting
				SIP From: headers. Usefull to translate
				SIP URIs to E.164 numbers for correct
				caller-id in PSTN and vice versa. Be careful
				to always rewrite things back in the other
				direction if you use this (meaning: if
				you rewrite <sip:a@b.c> to <sip:1234@foo.bar>
				make sure you rewrite <sip:1234@foo.bar>
				back to <sip:a@b.c>). Note that the current
				implementation may fail if more than one
				address results in <sip:1234@foo.bar> since
				there is no way to know which one to use
				when rewriting back.
enum_domainlist			(default: []) List of domains in which to look
				for NAPTR-records for requests _from_ the
				PSTN gateway. If you use this, you probably
				also want to configure internal_to_e164. The
				global E.164 root is e164.arpa, so an example
				would be ["e164.arpa", "e164.example.com"].
				All domains will be queried and after that
				the answers will be sorted and the best one
				will be used.
internal_to_e164		(default: []) Regexps for rewriting
				internal numbers to E.164 numbers. In pstnproxy,
				this is only used to query ENUM - NOT for
				rewriting stuff to E.164 before passing them
				to the PSTN gateway.

incomingproxy:
--------------
internal_to_e164		(default: []) Regexps for rewriting
				internal numbers to E.164 numbers.
e164_to_pstn			(default: []) Regexps for choosing PSTN gateway
				to use for E.164 numbers.
defaultroute			(default: "") SIP host name part of default
				route. Note that if you use e164_to_pstn, you
				don't have to point defaultroute at your
				PSTN gateway.
homedomain			(required) List of SIP domains this proxy
				should handle requests for.
enum_domainlist			(default: []) List of domains in which to look
				for NAPTR-records for requests that are not
				to SIP-users but where the user part matches
				one of the regexps in internal_to_e164. The
				global E.164 root is e164.arpa, so an example
				would be ["e164.arpa", "e164.example.com"].
				All domains will be queried and after that
				the answers will be sorted and the best one
				will be used.
max_register_time		(default: 43200) If registers have an 'expire'
				of more than this many seconds, use this
				value instead.
adminwww:
---------
www_baseurl			(required) Base URL for web server
httpd_config			(required) Path to httpd.conf

========
Examples
========

incomingproxy.config:
---------------------

[{incomingproxy, [{sipauth_realm, "example.com"},
                  {sipauth_password, ""},
                  {defaultroute, "other-sipserver.example.com"},
                  {logger_logbase, "/var/log/incomingproxy"},
                  {internal_to_e164, [{"^00(.+)$", "+\\1"},
                                      {"^0(.+)$", "+46\\1"},
                                      {"^(.+)$", "+468\\1"}
                                     ]},
		  {e164_to_pstn, [{"^\\+468([1-9][0-9]+)$", "00\\1@pstnproxy.example.com"},
				  {"^\\+46([1-9][0-9]+)$", "000\\1@pstnproxy..example.com"},
				  {"^\\+44([1-9][0-9]+)$", "000\\1@pstnproxy-uk.example.com"},
				  {"^\\+([0-9]+)$", "0000\\1@pstnproxy.example.com"}
                                 ]},
		  {enum_domainlist, ["e164.arpa"]},
                  {homedomain, ["example.com", "example.net", "example.org"]},
                  {ldap_server, "ldap.example.com"}
                 ]}].

pstnproxy.config:
-----------------
[{pstnproxy, [{sipauth_realm, "example.com"},
              {sipauth_password, ""},
              {sipauth_unauth_classlist, [internal]},
	      {logger_logbase, "/var/log/pstnproxy"},
              {pstngatewaynames, ["pstn-gw.example.com", "10.10.1.1"]},
              {myhostnames, ["sip-pstn.example.com", "sip2pstn.example.com", "10.10.1.2"]},
              {classdefs, [{"^[1-9]", national},
                           {"^0[1-9]", national},
                           {"^00", international},
                           {"", unknown}
                          ]},
              {databaseservers, ['incomingproxy@sip-incoming.example.com']},
              {internal_to_e164, [{"^00(.+)$", "+\\1"},
                                  {"^0(.+)$", "+46\\1"},
                                  {"^(.+)$", "+468\\1"}
                                 ]},
	      {enum_domainlist, ["e164.arpa"]},
	      {rewrite_from, [{"^.*<sip:([1-9].....+)@10.10.1.1>$", "\"PSTN luser\" <sip:0\\1@pstn-gw.example.com>"},
			      {"^.*<sip:0([1-9].....+)@pstn-gw.example.com>$", "<sip:\\1@10.10.1.1>"}
                             ]}
             ]}].

To insert an admin user (for bootstrap reasons) type this at an erlang prompt:

phone:insert_user("username", "password", [admin], []).
