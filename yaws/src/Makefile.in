# $Id$
#

srcdir = @srcdir@
top_srcdir = @top_srcdir@
VPATH = @srcdir@
prefix = @prefix@
DESTDIR = @DESTDIR@
SHELL = @SHELL@

confdir = @sysconfdir@
sslcertdir = @sslcertdir@
mnesiadir = @mnesiadir@
beamdir = @libdir@/yxa/ebin
includedir = @libdir@/yxa/include
sbindir = @sbindir@
exec_prefix=${prefix}
builddir = @builddir@
local_file = @local_file@

datadir = @datadir@
datarootdir = @datarootdir@
localstatedir = @localstatedir@

ERLANG_LIB_VER_asn1 = @ERLANG_LIB_VER_asn1@
ERLANG_LIB_VER_kernel = @ERLANG_LIB_VER_kernel@
ERLANG_LIB_VER_mnesia = @ERLANG_LIB_VER_mnesia@
ERLANG_LIB_VER_ssl = @ERLANG_LIB_VER_ssl@
ERLANG_LIB_VER_stdlib = @ERLANG_LIB_VER_stdlib@
ERLANG_LIB_VER_yaws = @ERLANG_LIB_VER_yaws@
ERLANG_LIB_VER_SUBST = @ERLANG_LIB_VER_SUBST@

docrootdir = $(datadir)/yxa/docroot
tmpdir = $(localstatedir)/run/yxa
logdir = $(localstatedir)/log/yxa

ERLC = @ERLC@
ERL = @ERL@

INSTALL = @INSTALL@
install_DATA = @INSTALL_DATA@
install_PROGRAM = @INSTALL_PROGRAM@

ebin_dir = ../../ebin
doc_dir = ../../doc

mkinstalldirs = $(SHELL) $(top_srcdir)/scripts/mkinstalldirs

systools_make_script = \
	$(ERLC) -pa $(ebin_dir) -I$(srcdir) $(ebin_dir)/$*.rel

erl_FILES = \
	yxa_yaws_app.erl \
	yxa_yaws_ctl.erl \
	yxa_yaws_sup.erl \
	yxa_yaws_util.erl

imported_hrl_FILES = \
	$(top_srcdir)/src/include/sipsocket.hrl \
	$(top_srcdir)/src/include/phone.hrl \
	$(top_srcdir)/src/include/yxa_config.hrl


hrl_FILES =

yxa_hrl_FILES = $(imported_hrl_FILES) $(hrl_FILES)

CC = gcc
CFLAGS = -Wall

EFLAGS = -W +debug_info -DDOCROOT=\"$(docrootdir)\" -DCACHEDIR=\"$(tmpdir)\" -DLOGDIR=\"$(logdir)\"

beam_FILES = $(addprefix $(ebin_dir)/, $(erl_FILES:.erl=.beam))

boot_FILES = yxa_yaws.boot

app_FILES = $(addprefix $(ebin_dir)/, $(boot_FILES:.boot=.app))

all: $(beam_FILES) $(app_FILES) $(boot_FILES)

install: $(beam_FILES) $(hrl_FILES) $(boot_FILES)
	$(mkinstalldirs) $(DESTDIR)$(beamdir)
	$(mkinstalldirs) $(DESTDIR)$(includedir)
	for p in $(beam_FILES) $(app_FILES) $(boot_FILES); do \
	  $(install_DATA) $$p $(DESTDIR)$(beamdir)/$$f ; \
	done
	for p in $(hrl_FILES); do \
	  $(install_DATA) $(srcdir)/$$p $(DESTDIR)$(includedir)/$$f ; \
	done

packages:

distclean: clean
	rm -f Makefile

clean:
	rm -f core *.core *~
	rm -f *.beam *.script *.start *.boot *.rel *.app *.script
	rm -f *.o ktrace.out erl_crash.dump
	rm -f $(beam_FILES)

doc:
	mkdir -p $(doc_dir)/html/yaws/src
	cp $(srcdir)/overview.edoc $(doc_dir)/html/yaws/src/
	$(ERL) $(YXA_EDOC_ARGS) -pa $(ebin_dir) -noshell \
		-yxa_edoc_dir $(doc_dir)/html/yaws/src \
		-yxa_edoc_srcpath $(srcdir) \
		-run yxa_edoc run "$(erl_FILES)" \
		-run init stop

$(beam_FILES): $(yxa_hrl_FILES)

SUFFIXES = .c .o .hrl .beam .erl .boot .rel .rel-in .app .app-in
.SUFFIXES:
.SUFFIXES: .c .o .hrl .beam .erl .boot .rel .rel-in .app .app-in

$(ebin_dir)/%.beam:	$(srcdir)/%.erl
	$(ERLC) -o $(ebin_dir) -I$(srcdir) -I$(top_srcdir)/src/include/ $(EFLAGS) $<

$(ebin_dir)/%.app:	$(srcdir)/%.app-in
	cp $< $@

$(ebin_dir)/%.rel:	$(srcdir)/%.rel-in
	sed $(ERLANG_LIB_VER_SUBST) $< > $@

yxa_yaws.boot: $(ebin_dir)/yxa_yaws.app $(ebin_dir)/yxa_yaws.rel
	$(systools_make_script)

yxa_yaws: yxa_yaws.in
	sed -e 's![@]CONFIGDIR[@]!$(confdir)!' \
            -e 's![@]SSLCERTDIR[@]!$(sslcertdir)!' \
            -e 's![@]erl[@]!$(ERL)!' \
            -e 's![@]docrootdir[@]!$(docrootdir)!' \
            -e 's![@]tmpdir[@]!$(tmpdir)!' \
            -e 's![@]includedir[@]!$(includedir)!' \
            -e 's![@]logdir[@]!$(logdir)!' \
            -e 's![@]beamdir[@]!$(beamdir)!' < $^ > $@.new && \
        chmod +x $@.new && \
        mv $@.new $@
