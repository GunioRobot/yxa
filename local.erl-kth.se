-module(local).
-export([sipuser/1, lookup_homedomain_url/1, lookup_remote_url/1,
	 lookupregexproute/1, lookupuser/1, lookupaddress/1,
	 lookupappserver/1, prioritize_locations/2, lookupdefault/1,
	 lookuppotn/1, lookupenum/1, lookuppstn/1, isours/1,
	 homedomain/1]).

sipuser(URL) ->
    {User, Pass, Host, Port, Parameters} = URL,
    User.

lookup_homedomain_url(URL) ->
    {User, Pass, Host, Port, Parameters} = URL,
    Mail = User ++ "@" ++ Host,
    Loc1 = mail2tel(Mail),
    logger:log(debug, "Local routing: mail2tel ~p -> ~p", [Mail, Loc1]),
    case Loc1 of
	none ->
	    none;
	Loc1 ->
	    lookup:lookuppotn(Loc1)
    end.

mail2tel(Mail) ->
    case directory:lookup_mail2uid(Mail) of
        none ->
            lookupkthid_address(Mail);
        KTHid ->
            lookupkthid_address(KTHid ++ "@kth.se")
    end.

lookup_remote_url(URL) ->
    none.

do_recv(Sock, Text) ->
    receive
	{tcp, Sock, Data} ->
	    do_recv(Sock, Text ++ Data);
	{tcp_closed, Sock} ->
	    Text
    end.

lookupkthid(KTHid) ->
    Server = "yorick.admin.kth.se",
    {ok, Sock} = gen_tcp:connect(Server, 80, 
				 [list, {packet, 0}]),
    ok = gen_tcp:send(Sock, "GET /service/personsokning/kthid2tele.asp?kthid=" ++ KTHid ++ " HTTP/1.0\r\n\r\n"),
    
    Text = do_recv(Sock, ""),
    {Header, Body} = sippacket:parse_packet(Text),
    {Request, Headerkeylist} = sippacket:parseheader(Header),
    ok = gen_tcp:close(Sock),
    Numbers = string:tokens(Body, "\r\n"),
    case Numbers of
	[] ->
	    none;
	[Number | _] ->
	    Number
    end.

lookupkthid_address(Address) ->
    case group_regexp:groups(Address, "(u[0-9]......)@kth.se") of
	{match, [KTHid]} ->
	    lookupkthid(KTHid);
	nomatch ->
	    none;
	{error, Error} ->
	    none
    end.

% local.erl hooks

lookupregexproute(User) ->
    lookup:lookupregexproute(User).

lookupuser(URL) ->
    lookup:lookupuser(URL).

lookupaddress(Key) ->
    lookup:lookupaddress(Key).

lookupappserver(Key) ->
    lookup:lookupappserver(Key).

prioritize_locations(Key, Locations) ->
    lookup:prioritize_locations(Locations).

lookupdefault(URL) ->
    lookup:lookupdefault(URL).

lookuppotn(Number) ->
    lookup:lookuppotn(Number).

lookupenum(Number) ->
    lookup:lookupenum(Number).

lookuppstn(Number) ->
    lookup:lookuppstn(Number).

isours(URL) ->
    lookup:isours(URL).

homedomain(Domain) ->
    lookup:homedomain(Domain).
