#! /bin/sh /usr/share/dpatch/dpatch-run
## autoconf.dpatch by  <mikma@users.sourceforge.net>
##
## All lines beginning with `## DP:' are a description of the patch.
## DP: Autodetect Erlang OTP library version numbers.
## DP: Make it possible to skip Erlang/OTP version check. Patch by Jakob Schlyter.

@DPATCH@
diff -urNad yxa-1.0~/configure.ac yxa-1.0/configure.ac
--- yxa-1.0~/configure.ac	2007-12-08 00:09:40.000000000 +0100
+++ yxa-1.0/configure.ac	2007-12-08 00:10:48.000000000 +0100
@@ -9,6 +9,23 @@
 AC_PROG_CC
 AC_PROG_INSTALL
 
+AC_ERLANG_NEED_ERLC
+AC_ERLANG_PATH_ERL
+AC_ERLANG_SUBST_INSTALL_LIB_DIR
+AC_ERLANG_CHECK_HEADERS([ssl/include/OTP-PKIX.hrl ssl/include/SSL-PKIX.hrl])
+AC_ERLANG_CHECK_LIB(asn1)
+AC_ERLANG_CHECK_LIB(kernel)
+AC_ERLANG_CHECK_LIB(mnesia)
+AC_ERLANG_CHECK_LIB(ssl)
+AC_ERLANG_CHECK_LIB(stdlib)
+AC_ERLANG_CHECK_LIB(yaws)
+AC_ERLANG_LIB_VER(asn1)
+AC_ERLANG_LIB_VER(kernel)
+AC_ERLANG_LIB_VER(mnesia)
+AC_ERLANG_LIB_VER(ssl)
+AC_ERLANG_LIB_VER(stdlib)
+AC_ERLANG_LIB_VER(yaws)
+
 AC_CONFIG_FILES(
 		Makefile \
 		src/Makefile \
@@ -46,8 +63,13 @@
 fi
 
 dnl check that the installed Erlang/OTP version is the right one for this version of YXA
-AC_MSG_CHECKING([Erlang/OTP version])
-cat > conftest.erl <<EOF
+AC_ARG_ENABLE(erlang-version-check,
+[AC_HELP_STRING([--enable-erlang-version-check],
+	[Check Erlang/OTP version @<:@default=yes@:>@])])
+	case "$enable_erlang_version_check" in
+	yes|'')
+		AC_MSG_CHECKING([Erlang/OTP version])
+		cat > conftest.erl <<EOF
 -module(conftest).
 -export([[start/0]]).
 
@@ -66,19 +88,24 @@
 
 EOF
 
-$ERLC conftest.erl || AC_MSG_ERROR(["Could not compile Erlang/OTP version check program using '$ERLC'"])
+		$ERLC conftest.erl || AC_MSG_ERROR(["Could not compile Erlang/OTP version check program using '$ERLC'"])
 
-if ! $ERL -s conftest -noshell -o ! -f conftest.out ; then
-   AC_MSG_ERROR(["Could not run Erlang/OTP version check program using '$ERL'"])
-fi
+		if ! $ERL -s conftest -noshell -o ! -f conftest.out ; then
+		   AC_MSG_ERROR(["Could not run Erlang/OTP version check program using '$ERL'"])
+		fi
 
-if test "x`cat conftest.out`" != "xok"; then
-   AC_MSG_RESULT([failed])
-   X="`cat conftest.out`"
-   AC_MSG_FAILURE([$X])
-else
-   AC_MSG_RESULT([ok])
-fi
+		if test "x`cat conftest.out`" != "xok"; then
+		   AC_MSG_RESULT([failed])
+		   X="`cat conftest.out`"
+		   AC_MSG_FAILURE([$X])
+		else
+		   AC_MSG_RESULT([ok])
+		fi
+		;;
+	no)
+		AC_MSG_RESULT(Skipped Erlang/OTP version check)
+		;;
+esac
 
 
 AC_ARG_WITH(mnesiadir,
diff -urNad yxa-1.0~/m4/erlang.m4 yxa-1.0/m4/erlang.m4
--- yxa-1.0~/m4/erlang.m4	1970-01-01 01:00:00.000000000 +0100
+++ yxa-1.0/m4/erlang.m4	2007-12-08 00:11:08.000000000 +0100
@@ -0,0 +1,68 @@
+dnl erlang.m4
+dnl Copyright (C) 2007  Mikael Magnusson
+dnl
+dnl This program is free software; you can redistribute it and/or modify
+dnl it under the terms of the GNU General Public License as published by
+dnl the Free Software Foundation; either version 2 of the License, or
+dnl (at your option) any later version.
+dnl
+dnl This program is distributed in the hope that it will be useful,
+dnl but WITHOUT ANY WARRANTY; without even the implied warranty of
+dnl MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+dnl GNU Library General Public License for more details.
+dnl
+dnl You should have received a copy of the GNU General Public License
+dnl along with this program; if not, write to the Free Software
+dnl Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.
+dnl
+
+AC_DEFUN([AC_ERLANG_LIB_VER],
+[AC_CACHE_CHECK([Erlang/OTP '$1' library version], [erlang_cv_lib_ver_$1],
+   [if test "$ERLANG_LIB_VER_$1" = ""; then
+       erlang_cv_lib_ver_$1=`echo "$ERLANG_LIB_DIR_$1"|sed -e "s/.*-\(.*\)/\1/"`
+    fi])
+AC_SUBST([ERLANG_LIB_VER_$1], [$erlang_cv_lib_ver_$1])
+ERLANG_LIB_VER_SUBST="$ERLANG_LIB_VER_SUBST -e 's,[@]ERLANG_LIB_VER_$1[@],\$(ERLANG_LIB_VER_$1),g'"
+AC_SUBST([ERLANG_LIB_VER_SUBST])
+]) # AC_ERLANG_LIB_VER
+
+#
+# AC_ERLANG_CHECK_HEADER(HEADER, [ACTION-IF-FOUND], [ACTION-IF-NOT-FOUND])
+# -----------------------------------------------------------------
+AC_DEFUN([AC_ERLANG_CHECK_HEADER],
+[AC_REQUIRE([AC_ERLANG_NEED_ERLC])dnl
+ac_header_name="$1"
+AS_VAR_PUSHDEF([ac_hrl], [ac_cv_erl_hrl_${ac_header_name}])dnl
+AC_CACHE_CHECK([for ${ac_header_name}], ac_hrl,
+[AC_LANG_PUSH(Erlang)dnl
+AC_LINK_IFELSE(
+	[AC_LANG_PROGRAM([dnl
+		-include_lib("${ac_header_name}").],[
+		ok
+	])],
+	[AS_VAR_SET(ac_hrl, yes)],
+	[AS_VAR_SET(ac_hrl, no)])
+AC_LANG_POP(Erlang)dnl
+])
+AS_IF([test AS_VAR_GET(ac_hrl) = yes], [$2], [$3])dnl
+AS_VAR_POPDEF([ac_hrl])dnl
+])# AC_ERLANG_CHECK_HEADER
+
+# AC_ERLANG_CHECK_HEADERS(HEADER..., [ACTION-IF-FOUND], [ACTION-IF-NOT-FOUND])
+# ---------------------------------------------------------------------
+AC_DEFUN([AC_ERLANG_CHECK_HEADERS],
+[AC_FOREACH([AC_Hrl], [$1],
+ [m4_pushdef([AC_Hrl_Name],m4_bpatsubst(m4_bpatsubst(AC_Hrl, ["], []),
+                                         [(.*)],
+                                         []))dnl
+  AH_TEMPLATE(AS_TR_CPP(HAVE_[]AC_Hrl_Name),
+               [Define to 1 if you have the `]AC_Hrl_Name[' header file.])dnl
+  m4_popdef([AC_Hrl_Name])])dnl
+for ac_hrl in $1
+do
+ac_hrl_name=`echo $ac_hrl|sed -e 's/^\(.*\)(.*)$/\1/'`
+AC_ERLANG_CHECK_HEADER($ac_hrl,
+              [AC_DEFINE_UNQUOTED([AS_TR_CPP([HAVE_$ac_hrl_name])]) $2],
+              [$3], [$4])dnl
+done
+])# AC_ERLANG_CHECK_HEADERS
