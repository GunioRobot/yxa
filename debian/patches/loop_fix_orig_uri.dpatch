#! /bin/sh /usr/share/dpatch/dpatch-run
## loop_fix_orig_uri.dpatch by  <mikma@users.sourceforge.net>
##
## All lines beginning with `## DP:' are a description of the patch.
## DP: Fix orig URI used for loop detection in
## DP: transportlayer:send_proxy_request/4.

@DPATCH@
diff -urNad yxa-1.0+20080221svn~/src/sippipe.erl yxa-1.0+20080221svn/src/sippipe.erl
--- yxa-1.0+20080221svn~/src/sippipe.erl	2008-02-20 09:39:12.000000000 +0100
+++ yxa-1.0+20080221svn/src/sippipe.erl	2009-03-15 11:47:44.000000000 +0100
@@ -124,7 +124,7 @@
 	    transactionlayer:send_response_handler(ServerHandler, 500, "Destination unreachable"),
 	    error;
 	[FirstDst | _] = DstList when is_record(FirstDst, sipdst) ->
-	    NewRequest = Request#request{uri = FirstDst#sipdst.uri},
+	    NewRequest = Request,
 	    case local:start_client_transaction(NewRequest, FirstDst, Branch, Timeout) of
 		BranchPid when is_pid(BranchPid) ->
 		    final_start(Branch, ServerHandler, BranchPid, Request, DstList, Timeout, ApproxMsgSize);
@@ -388,7 +388,7 @@
 		[FirstDst | _] = NewDstList when is_record(FirstDst, sipdst) ->
 		    NewBranch = get_next_target_branch(State#state.branch),
 		    Request = State#state.request,
-		    NewRequest = Request#request{uri = FirstDst#sipdst.uri},
+		    NewRequest = Request,
 		    %% Figure out what timeout to use. To not get stuck on a single destination, we divide the
 		    %% total ammount of time we have at our disposal with the number of remaining destinations
 		    %% that we might try. This might not be the ideal algorithm for this, but it is better than
diff -urNad yxa-1.0+20080221svn~/src/sipproxy.erl yxa-1.0+20080221svn/src/sipproxy.erl
--- yxa-1.0+20080221svn~/src/sipproxy.erl	2007-10-17 16:30:33.000000000 +0200
+++ yxa-1.0+20080221svn/src/sipproxy.erl	2009-03-15 11:47:44.000000000 +0100
@@ -404,7 +404,7 @@
     DstList = sipdst:url_to_dstlist(DstURI, ApproxMsgSize, URI),
 
     NewRequest =
-	Request#request{uri    = URI,
+	Request#request{
 			header = NewHeader
 		       },
 
