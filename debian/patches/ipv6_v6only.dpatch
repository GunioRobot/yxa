#! /bin/sh /usr/share/dpatch/dpatch-run
## ipv6_v6only.dpatch by  <mikma@users.sourceforge.net>
##
## All lines beginning with `## DP:' are a description of the patch.
## DP: Enable IPV6_V6ONLY on IPv6 sockets. Yxa doesn't work if it's
## DP: disabled.

@DPATCH@
diff -urNad yxa-1.0+20090326~/src/transportlayer/sipsocket_udp.erl yxa-1.0+20090326/src/transportlayer/sipsocket_udp.erl
--- yxa-1.0+20090326~/src/transportlayer/sipsocket_udp.erl	2009-03-31 22:55:53.000000000 +0200
+++ yxa-1.0+20090326/src/transportlayer/sipsocket_udp.erl	2009-04-06 22:30:35.000000000 +0200
@@ -75,6 +75,8 @@
 %% v6 sockets have a default receive buffer size of 1k in Erlang R9C-0
 -define(SOCKETOPTSv6, [{reuseaddr, true}, binary, inet6, {buffer, 8 * 1024}]).
 
+-define(IPPROTO_IPV6, 41).
+-define(IPV6_V6ONLY, 26).
 
 %%====================================================================
 %% External functions
@@ -171,7 +173,11 @@
 	    {stop, "Could not open UDP socket"}
     end;
 start_listening([{udp6, IP, Port} | T], State) when is_integer(Port), is_record(State, state) ->
-    SocketOpts = [{ip, IP} | ?SOCKETOPTSv6],
+    SocketOpts0 = [{ip, IP} | ?SOCKETOPTSv6],
+    SocketOpts = case os:type() of
+		     {unix,linux} -> [{raw,  ?IPPROTO_IPV6, ?IPV6_V6ONLY, <<1:32/native>>} | SocketOpts0];
+		     _ -> SocketOpts0
+		 end,
     case gen_udp:open(Port, SocketOpts) of
 	{ok, Socket} ->
 	    HostPort1 = get_localaddr(Socket, "[::]"),
diff -urNad yxa-1.0+20090326~/src/transportlayer/tcp_listener.erl yxa-1.0+20090326/src/transportlayer/tcp_listener.erl
--- yxa-1.0+20090326~/src/transportlayer/tcp_listener.erl	2009-03-31 22:55:53.000000000 +0200
+++ yxa-1.0+20090326/src/transportlayer/tcp_listener.erl	2009-04-06 22:29:31.000000000 +0200
@@ -55,6 +55,8 @@
 -define(SOCKETOPTS, [binary, {packet, 0}, {active, false}, {reuseaddr, true}]).
 %% The ssl module does not support reuseaddr
 -define(SSL_SOCKETOPTS, [binary, {packet, 0}, {active, once}, {nodelay, true}]).
+-define(IPPROTO_IPV6, 41).
+-define(IPV6_V6ONLY, 26).
 
 
 %%====================================================================
@@ -335,7 +337,11 @@
     This = [inet, {ip, IPtuple}],
     {ok, inet, gen_tcp, This ++ ?SOCKETOPTS};
 get_settings(tcp6, IPtuple) ->
-    This = [inet6, {ip, IPtuple}],
+    This0 = [inet6, {ip, IPtuple}],
+    This = case os:type() of
+	       {unix,linux} -> [{raw,  ?IPPROTO_IPV6, ?IPV6_V6ONLY, <<1:32/native>>} | This0];
+	       _ -> This0
+	   end,
     {ok, inet, gen_tcp, This ++ ?SOCKETOPTS};
 get_settings(tls, IPtuple) ->
     L = get_settings_tls(),
